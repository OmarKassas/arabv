<launch>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find arabv)/param/control_config.yaml" command="load"/>
  <param name="robot_description" command="cat $(find arabv)/urdf/arabv.urdf"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find arabv)/worlds/world.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="recording" value="false"/>
    <arg name="headless" value="false"/>
  	<arg name="verbose" value="true"/>
    <arg name="debug" value="false"/>
  </include>

  <node
    name="spawn_model"  pkg="gazebo_ros" type="spawn_model"
    args="-file $(find arabv)/urdf/arabv.urdf -urdf -model arabv"
    output="screen" />

  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />
  
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />

  <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">
      <remap from="/scan" to="/arabv/lidar/scan" />
      <rosparam command="load" file="$(find arabv)/param/filter.yaml" />
  </node>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/arabv" args="table_joint_position_controller joint_state_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/arabv/joint_states" />
  </node> -->


</launch>